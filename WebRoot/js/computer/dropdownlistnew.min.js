var requestDatalist = {};
var browserName = navigator.userAgent.toLowerCase();
var BitA = BitA || {};
BitA.Tools = {
    format: function() {
        if (arguments.length == 0) {
            return null;
        }
        var d = arguments[0];
        var c = arguments[1];
        for (var a in c) {
            var b = new RegExp("\\{" + a + "\\}", "gi");
            d = d.replace(b, c[a]);
        }
        return d;
    },
    getStringLength: function(d) {
        var e = 0,
        a = d.length,
        b = -1;
        for (var c = 0; c < a; c++) {
            b = d.charCodeAt(c);
            if (b >= 0 && b <= 128) {
                e += 1;
            } else {
                e += 2;
            }
        }
        return e;
    }
};
function BindSelectNew(a) {
    this.defaults = {/*
        url: "http://api.car.bitauto.com/CarInfo/MasterBrandToSerialNew.aspx",
        encode: "utf-8",
        container: {
            producer: "bit_producer1",
            master: "bit_master1",
            brand: "bit_brand1",
            serial: "bit_serial1",
            cartype: "bit_cartype1"
        },
        callback: {},
        onchange: {},
        parent: {},
        serias: "m",
        include: {},
        dvalue: {},
        checkdata: null,
        field: {
            deffield: {
                value: "id",
                text: "name"
            }
        },
        datatype: 4,
        condition: "type={type}&pid={pid}&rt={rt}&serias={serias}&key={rt}_{pid}_{type}_{serias}",
        background: "bg-blue",
        groupoprtionstyle: {
            style: "normal",
            color: "#efefef",
            align: "center"
        },
        abbreviation: {
            producer: "p",
            master: "m",
            brand: "b",
            serial: "s",
            cartype: "t"
        },
        deftext: {
            producer: {
                value: "0",
                text: "请选择厂商"
            },
            master: {
                value: "0",
                text: "请选择品牌"
            },
            brand: {
                value: "0",
                text: "请选择品牌"
            },
            serial: {
                value: "0",
                text: "请选择系列"
            },
            cartype: {
                value: "0",
                text: "请选择车款"
            }
        },
        btn: {
            car: {
                id: "bit_def_btnCar",
                url: {
                    cartype: {},
                    serial: {
                        url: "{defurl}{spell}/",
                        params: {
                            spell: "urlSpell"
                        }
                    },
                    master: {
                        url: "{defurl}{spell}/",
                        params: {
                            spell: "urlSpell"
                        }
                    }
                },
                defurl: {
                    url: "http://car.bitauto.com/"
                }
            },
            price: {
                id: "bit_def_btnPrice",
                url: {
                    cartype: {},
                    serial: {
                        url: "http://car.bitauto.com/{param1}/baojia/",
                        params: {
                            param1: "urlSpell"
                        },
                        defparams: {}
                    },
                    master: {
                        url: "http://price.bitauto.com/keyword.aspx?mb_id={param1}",
                        params: {
                            param1: "id"
                        }
                    }
                },
                defurl: {
                    url: "http://price.bitauto.com/"
                }
            }
        },
        gotype: 1,
        bind: null
    */};
    $.extend(true, this.defaults, a);
    if (a.container) {
        this.defaults.container = a.container;
    } else {
        var c = {};
        for (var b in this.defaults.container) {
            var d = document.getElementById(this.defaults.container[b]);
            if (d) {
                c[b] = this.defaults.container[b];
            }
        }
        this.defaults.container = c;
    }
    selectValue = {};
    this.Data = {};
    this.bindList();
}
BindSelectNew.prototype.bindList = function() {
    var a = 0;
    for (var b in this.defaults.container) {
        this.setDefaultValue(b);
    }
    for (var b in this.defaults.container) {
        a++;
        if (a == 1) {
            this.GetDataList(b, 0);
        }
    }
};
BindSelectNew.prototype.setDefaultValue = function(a) {
    var b = '<span class="sel-item sel-item-disabled"><span>' + this.getDefaultValue(a).text + '</span><em></em></span><div class="popup-box" style="display:none;"></div>';
    $("#" + this.defaults.container[a]).unbind("click").html(b);
};
BindSelectNew.prototype.GetDataList = function(c, d) {
    var a = "";
    var f = BitA.Tools.format(this.defaults.condition, {
        pid: d,
        type: "" + this.defaults.datatype + "",
        rt: "" + c + "",
        serias: "" + this.defaults.serias + ""
    });
    if (typeof this.defaults.include != "undefined" && typeof this.defaults.include[c] != "undefined") {
        f += "&include=" + this.defaults.include[c];
    }
    var e = c + "_" + d + "_" + this.defaults.datatype + "_" + this.defaults.serias;
    if (typeof this.defaults.include[c] != "undefined" && this.defaults.include[c] != null) {}
    var b = this.defaults.url + "?" + f;
    var g = this;
    $.ajax({
        url: b,
        cache: true,
        dataType: "script",
        success: function() {
            g.CallBack(c, d, e);
        }
    });
};
BindSelectNew.prototype.CallBack = function(k, o, h) {
    var f = requestDatalist[h];
    var n = this.defaults.abbreviation[k];
    if (typeof f == "undefined" || f == null || $.isEmptyObject(f)) {
        this.setDefaultValue(k);
        return;
    }
    var p = [];
    if (this.defaults.checkdata != null) {
        p = this.defaults.checkdata(f, n);
    } else {
        var j = RegExp(n, "gi");
        for (var b in f) {
            p.push(b.replace(j, ""));
        }
    }
    var c = {};
    var a = p.length;
    for (var e = 0; e < a; e++) {
        var g = p[e];
        var d = f[n + g];
        if (typeof d == "undefined" || d == null) {
            continue;
        }
        c[n + g] = d;
        if (typeof this.Data[k] == "undefined" || this.Data[k] == null) {
            this.Data[k] = {};
        }
        this.Data[k][n + g] = d;
    }
    var m = this.getRelatObjctType(k, -1);
    if (o > 0 && m != null) {
        var n = this.defaults.abbreviation[m];
        this.Data[m][n + o]["nl"] = p;
    }
    this.addDataItem(k, c);
    this.setItemDefaultValue(k);
    var l = this.defaults.callback[k];
    if (typeof l != "undefined" && l instanceof Function) {
        l(c);
    }
};
BindSelectNew.prototype.addDataItem = function(d, s) {
    var q = [];
    q.push('<div class="select-list">');
    var e = 0,
    l = {},
    n = 0,
    c = 0,
    g = {},
    m = "";
    for (var i in s) {
        var j = s[i];
        if (j == null) {
            continue;
        }
        var a = this.defaults.field[d] ? d: "deffield";
        var o = j[this.defaults.field[a]["value"]];
        var k = j[this.defaults.field[a]["text"]];
        if (o == null || o == "" || k == null || k == "") {
            continue;
        }
        var u = j.goid;
        if ((d == "master" || d == "producer") && l[j.tSpell] == null) {
            l[j.tSpell] = "";
            e++;
        } else {
            if (! (d == "master" || d == "producer") && g[u] == null) {
                g[u] = "";
                q.push('<div class="pop-sub-tt"><span>' + j.goname + "</span></div>");
                n++;
            }
        }
        m = k;
        var b = "";
        if ((d == "master" || d == "producer") && e % 2 == 0) {
            b = this.defaults.background;
        }
        if (d == "cartype") {
            var r = j.referprice;
            q.push('<a href="javascript:;" class="' + b + '" bita-value="' + o + '" bita-text="' + k + '">');
            if (r != undefined) {
                r = (r == "" || r == 0) ? "": r + "万";
                q.push("<strong>" + r + "</strong>");
                m = r + k;
            }
            q.push("" + k + "</a>");
        } else {
            if (d == "master" || d == "producer") {
                q.push('<a href="javascript:;" class="' + b + '" bita-value="' + o + '"bita-text="' + k + '"><em>' + j.tSpell + "</em> " + k + "</a>");
            } else {
                q.push('<a href="javascript:;" class="' + b + '" bita-value="' + o + '"bita-text="' + k + '">' + k + "</a>");
            }
        }
        var t = BitA.Tools.getStringLength(m);
        if (t > c) {
            c = t;
        }
        n++;
    }
    q.push("</div>");
    var p = $("#" + this.defaults.container[d]);
    p.find(".popup-box").html(q.join("")).prev().removeClass("sel-item-disabled");
    n++;
    if (n < 17) {
        var v = p.find(".select-list a").eq(0).height();
        v = v == 0 ? 24 : v;
        p.find(".popup-box").height(v * n);
    }
    if (d == "cartype" || d == "serial") {
        if ((c * 6 + 28) > p.find(".popup-box").width()) {
            p.find(".popup-box").width(c * 6 + 28 + 5);
        }
    }
    this.bindEvent(d);
    var f = this.getRelatObjctType(d, 1);
    var h = this;
    if (f != null) {
        if (typeof this.defaults.dvalue[d] != "undefined" && this.defaults.dvalue[d] != null) {
            this.GetDataList(f, this.defaults.dvalue[d]);
        }
    }
};
BindSelectNew.prototype.setItemDefaultValue = function(b) {
    if (this.defaults.dvalue != null && this.defaults.dvalue[b] != undefined) {
        if (this.defaults.dvalue[b] != "0") {
            var a = $("#" + this.defaults.container[b]).find(".select-list a[bita-value='" + this.defaults.dvalue[b] + "']");
            if (a.length) {
                $("#" + this.defaults.container[b]).children(".sel-item").find("span").attr("value", this.defaults.dvalue[b]).html(a.attr("bita-text"));
                if (b == "cartype") {
                    a.addClass("none").unbind("click");
                }
                this.defaults.dvalue[b] = null;
            }
        }
    }
};
BindSelectNew.prototype.getDefaultValue = function(a) {
    switch (a) {
    case "producer":
        return this.defaults.deftext.producer;
    case "master":
        return this.defaults.deftext.master;
    case "brand":
        return this.defaults.deftext.brand;
    case "serial":
        return this.defaults.deftext.serial;
    case "cartype":
        return this.defaults.deftext.cartype;
    default:
        return null;
    }
};
BindSelectNew.prototype.getRelatObjctType = function(b, c) {
    var a = this.getIndexType(b);
    var d = [];
    for (var e in this.defaults.container) {
        d.push(e);
    }
    a += c;
    if (a < 0 || a > d.length) {
        return null;
    }
    return d[a];
};
BindSelectNew.prototype.getIndexType = function(b) {
    var a = 0;
    for (var c in this.defaults.container) {
        if (c == b.toLowerCase()) {
            return a;
        }
        a++;
    }
};
BindSelectNew.prototype.getContainer = function() {
    var a = [];
    for (var b in this.defaults.container) {
        a.push(b);
    }
    return a;
};
BindSelectNew.prototype.getValue = function(a) {
    var b = $("#" + this.defaults.container[a]).find(".sel-item span");
    return b.attr("value") == undefined ? selectValue[a] : b.attr("value");
};
BindSelectNew.prototype.bindEvent = function(b) {
    var a = this;
    $("#" + this.defaults.container[b]).children(".sel-item").click(function() {
        var c = $(this).next(".popup-box");
        if (c.css("display") == "none") {
            c.show();
        } else {
            c.hide();
        }
        var d = a.getContainer();
        for (var e = 0; e < d.length; e++) {
            if (b != d[e]) {
                $("#" + a.defaults.container[d[e]]).children(".popup-box").hide();
            }
        }
    });
    if (b == "cartype") {
        $("#" + this.defaults.container[b]).children(".sel-item").hover(function() {
            var e = $(this).find("span").text();
            var c = BitA.Tools.getStringLength(e);
            var d = $(this).width();
            if ((c * 6) > d) {
                $(this).addClass("sel-item-over");
            }
        },
        function() {
            $(this).removeClass("sel-item-over");
        });
    }
    $("#" + this.defaults.container[b]).find(".popup-box .pop-tt").click(function() {
        $(this).parent().hide();
    });
    $("#" + this.defaults.container[b]).find(".popup-box .select-list a").bind("click",
    function(j) {
        j.preventDefault();
        var h = $(this).attr("bita-value");
        var k = $(this).attr("bita-text");
        $(this).closest(".popup-box").prev().find("span").html(k).attr("value", h);
        $(this).closest(".popup-box").hide();
        var d = a.getIndexType(b);
        var g = a.getContainer();
        for (var f = d + 1; f < g.length; f++) {
            a.setDefaultValue(g[f]);
        }
        selectValue[b] = h;
        var c = a.defaults.onchange[b];
        if (typeof c != "undefined" && c instanceof Function) {
            c({
                id: h,
                name: k
            });
        }
        var l = a.getRelatObjctType(b, 1);
        if (l == null) {
            return;
        }
        a.GetDataList(l, h);
    });
    $(document).click(function(d) {
        d = d || window.event;
        var c = d.srcElement || d.target;
        if ($(c).closest(".sel-item").length <= 0) {
            $(".sel-item-box .popup-box").hide();
        }
    });
};
BitA.DropDownListNew = function(a) {
    if (!a) {
        a = {};
    }
    return new BindSelectNew(a);
};
$(function(){
	$("#liDispaly2").css("display","none");
});